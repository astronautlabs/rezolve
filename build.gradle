    
apply plugin: 'maven'

configurations {
    deployerJars
}

dependencies {
	deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:0.0.4"
}


uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "packagecloud+https://packagecloud.io/rezonant/rezolve") {
            authentication(password: rezolveMavenPassword)
        }
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
	
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

ext.buildnumber = 0
if (System.getenv('BUILD_NUMBER') != null)
    project.buildnumber = System.getenv('BUILD_NUMBER')
else {
    try {
        ext.buildnumber += "_" + "git rev-parse --abbrev-ref HEAD".execute().text.trim();
        ext.buildnumber += "_" + "git rev-parse --short HEAD".execute().text.trim();
    } catch (all) {}
    logger.lifecycle "No build number detected, setting to ${ext.buildnumber}"
}

version = "${mod_version}.${buildnumber}"
group = "com.astronautlabs.mc.rezolve" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Rezolve"

sourceCompatibility = targetCompatibility = "1.6" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.6"
}

minecraft {
    version = "1.10.2-12.18.3.2316"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    replace "@VERSION@", project.version
   	replaceIn "RezolveMod.java"
}

repositories {
    mavenCentral()
    maven { url = "http://chickenbones.net/maven" }
    maven { url = "http://mobiusstrip.eu/maven" }
    maven { url = "http://dl.tsr.me/artifactory/libs-release-local" }
    maven { url = "http://maven.tterrag.com" }
    maven { url = "http://dvs1.progwml6.com/files/maven" } 
    maven { url = "http://files.minecraftforge.net/maven" }
    maven { url = "http://maven.cil.li/" }
    maven { url = "http://maven.ic2.player.to" }
    maven { url = "http://maven.epoxide.xyz" }
    maven { url = "https://www.curseforge.com/api/maven/?token=99cbb405-a0ae-4a7f-87dc-24ab55a44b4b" }
    ivy {
        url "http://ae-mod.info/builds"
        layout "pattern", {
            artifact "[module]-[revision](-[classifier])(.[ext])"
        }
    }
    mavenLocal()
}


dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // compile "com.mod-buildcraft:buildcraft:${buildcraft_version}:api"
    
    compile "mcp.mobius.waila:Waila:${waila_version}"
    compile "mezz.jei:jei_${minecraft_version}:${jei_version}"
    compile "com.enderio.core:EnderCore:${endercore_version}"
    compile "com.enderio:EnderIO:${enderio_version}"
    compile "appeng:appliedenergistics2:${ae_version}:api"
    compile "net.darkhax.tesla:Tesla:${tesla_version}"
    // deobfCompile "cofhcore:CoFHCore-1.10.2:release:universal"
    
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'ext/cofhlib/src/main/java'
            exclude '**/cofh/lib/**'
            exclude '**/IGeneratorParser.java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    
    cofh {
        java {
            // Note: If this doesn't work in Eclipse, add those as Resource Filters to the package, not as filters to the source set...
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'com.astronautlabs.mc.rezolve.core.RezolveLoadingPlugin'
		attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}